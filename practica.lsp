(defun paralelepipedo (x1 y1 x2 y2)
	(move x1 y1)
	(draw x1 y2 x2 y2 x2 y1 x1 y1)
)

(defun paralelepipedoRelleno (r g b x1 y1 x2 y2)
	(color r g b)
	(paralelepipedo x1 y1 x2 y2)
	(dotimes (i (- y2 y1))
		(move x1 (+ i y1))
		(draw x2 (+ i y1))
	)
	(color 0 0 0)
)

(defun VISUALIZADORCOLOR200 (imagen a z)
	(setq fichero (open imagen :direction :input
	:element-type 'unsigned-byte))
	(setq pixel 1)
	(setq B 0)
	(setq G 0)
	(setq R 0)
	(setq x a)
	(setq y z)
	(move x y)
	(loop
		(setq B (read-byte fichero nil))
		(if (null B) (return ()))
		(setq G (read-byte fichero nil))
		(if (null G) (return ()))
		(setq R (read-byte fichero nil))
		(if (null R) (return ()))
		(color R G B)
		(draw (+ 1 x) y)
		(setq pixel (+ pixel 1))
		(setq x (+ x 1))
		(cond  ((> pixel 200) (setq pixel 1) (setq x a) (setq y (+ y 1)) ) )
		(move x y)
	)
       (close fichero)
)

(defun VISUALIZADORCOLOR20 (imagen a z)
	(setq fichero (open imagen :direction :input
	:element-type 'unsigned-byte))
	(setq pixel 1)
	(setq B 0)
	(setq G 0)
	(setq R 0)
	(setq x a)
	(setq y z)
	(move x y)
	(loop
		(setq B (read-byte fichero nil))
		(if (null B) (return ()))
		(setq G (read-byte fichero nil))
		(if (null G) (return ()))
		(setq R (read-byte fichero nil))
		(if (null R) (return ()))
		(color R G B)
		(draw (+ 1 x) y)
		(setq pixel (+ pixel 1))
		(setq x (+ x 1))
		(cond  ((> pixel 20) (setq pixel 1) (setq x a) (setq y (+ y 1)) ) )
		(move x y)
	)
       (close fichero)
)

(defun dibujarInterfaz ()
	(cls)
	(paralelepipedorelleno 0 0 0 5 335 435 375)
	(paralelepipedo 5 175 435 330)
	(paralelepipedorelleno 0 0 0 5 138 635 173)
	(paralelepipedo 5 35 635 135)
	(paralelepipedo 5 0 330 30)
	(paralelepipedorelleno 0 0 0 330 0 635 30)
	(VISUALIZADORCOLOR200 "fotos/LogoPractica.img" 440 175)
	(goto-xy 0 10)
)
